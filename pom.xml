<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>be.stealingdapenta</groupId>
  <artifactId>coreai</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <name>CoreAI</name>

  <properties>
    <java.version>21</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>papermc-repo</id>
      <url>https://repo.papermc.io/repository/maven-public/</url>
    </repository>
    <repository>
      <id>sonatype</id>
      <url>https://oss.sonatype.org/content/groups/public/</url>
    </repository>
  </repositories>

  <dependencies>
    <!-- Paper API -->
    <dependency>
      <groupId>io.papermc.paper</groupId>
      <artifactId>paper-api</artifactId>
      <version>1.21.5-R0.1-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>

    <!-- OkHttp for HTTP calls -->
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>4.12.0</version>
    </dependency>

    <!-- Moshi JSON library -->
    <dependency>
      <groupId>com.squareup.moshi</groupId>
      <artifactId>moshi</artifactId>
      <version>1.15.2</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Compiler plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <!-- Shade plugin: runs on both package and install phases -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.3</version>
        <configuration>
          <!-- Relocations -->
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <!-- Filters: exclude metadata only -->
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/okio.kotlin_module</exclude>
                <exclude>META-INF/versions/**</exclude>
                <exclude>META-INF/MANIFEST.MF</exclude>
                <exclude>META-INF/*.kotlin_module</exclude>
                <exclude>**/*.kotlin_metadata</exclude>
                <exclude>META-INF/proguard/**</exclude>
              </excludes>
            </filter>
          </filters>
          <relocations>
            <relocation>
              <pattern>okhttp3</pattern>
              <shadedPattern>be.stealingdapenta.coreai.shaded.okhttp3</shadedPattern>
            </relocation>
            <relocation>
              <pattern>okio</pattern>
              <shadedPattern>be.stealingdapenta.coreai.shaded.okio</shadedPattern>
            </relocation>
            <relocation>
              <pattern>com.squareup.moshi</pattern>
              <shadedPattern>be.stealingdapenta.coreai.shaded.moshi</shadedPattern>
            </relocation>
            <relocation>
              <pattern>kotlin</pattern>
              <shadedPattern>be.stealingdapenta.coreai.shaded.kotlin</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.intellij.lang.annotations</pattern>
              <shadedPattern>be.stealingdapenta.coreai.shaded.intellij.annotations</shadedPattern>
            </relocation>
            <relocation>
              <pattern>org.jetbrains.annotations</pattern>
              <shadedPattern>be.stealingdapenta.coreai.shaded.jetbrains.annotations</shadedPattern>
            </relocation>
          </relocations>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <mainClass>be.stealingdapenta.coreai.CoreAI</mainClass>
            </transformer>
          </transformers>
        </configuration>
        <executions>
          <!-- Package phase execution -->
          <execution>
            <id>shade-on-package</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
          <!-- Install phase execution to ensure shading on installation -->
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <id>shade-on-install</id>
            <phase>install</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <!-- plugin.yml unfiltered -->
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>plugin.yml</include>
        </includes>
        <filtering>false</filtering>
      </resource>
      <!-- other resources filtered -->
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>plugin.yml</exclude>
        </excludes>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
</project>
